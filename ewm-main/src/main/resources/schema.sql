CREATE TABLE IF NOT EXISTS categories
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
    id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(50)         NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    CONSTRAINT email_check CHECK (email ~* '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$')
);

CREATE TABLE IF NOT EXISTS locations
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    latitude  FLOAT NOT NULL,
    longitude FLOAT NOT NULL,
    CONSTRAINT unique_location UNIQUE (latitude, longitude)
);


CREATE TABLE IF NOT EXISTS events
(
    id                 INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(2000)               NOT NULL CHECK (LENGTH(title) >= 20),
    category           INTEGER,
    description        VARCHAR(7000)               NOT NULL CHECK (LENGTH(title) >= 20),
    event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    location_id        INTEGER,
    paid               BOOLEAN,
    participant_limit  INTEGER,
    request_moderation BOOLEAN,
    title              VARCHAR(120)                NOT NULL CHECK (LENGTH(title) >= 3),
    FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requester
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created   TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    event     INTEGER                     NOT NULL,
    requester INTEGER                     NOT NULL,
    status    VARCHAR(25)                 NOT NULL,
    FOREIGN KEY (event) REFERENCES events (id) ON DELETE CASCADE,
    FOREIGN KEY (requester) REFERENCES users (id) ON DELETE CASCADE
);